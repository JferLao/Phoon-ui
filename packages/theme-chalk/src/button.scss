@charset 'UTF-8';
@import "./mixins/utils";
@import "./mixins/button";
@import "./mixins/mixins";
@import "common/var";

/* ph-button */
@include b(button) {
	display: inline-block;
	position: relative;
	font-weight: $--button-font-weight;
	line-height: 1;
	white-space: nowrap;
	text-align: center;
	cursor: pointer;
	background-image: none;
	background: $--button-default-background-color;
	border: $--border-base;
	border-color: $--button-default-border-color;
	color: $--button-default-font-color;
	box-sizing: border-box;
	outline: none;
	margin: 0;
	transition: 0.1s;
	@include utils-user-select(none);
	@include button-size(
		$--button-padding-vertical,
		$--button-padding-horizontal,
		$--button-font-size,
		$--button-border-radius
	);

	/* 兄弟选择器 */
	& + & {
		margin-left: 10px;
	}

	&:hover,
	&:focus {
		color: $--color-primary;
		border-color: $--color-primary-light-7;
		background-color: $--color-primary-light-9;
	}

	&:active {
		color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
		border-color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
		outline: none;
	}

	/* 去除Firefox点击某些元素后出现的边框 */
	&::-moz-focus-inner {
		border: 0;
	}

	/* icon后兄弟的span标签 */
	& [class*="ph-icon-"] {
		& + span {
			margin-left: 5px;
		}
	}

	/* is-plain */
	@include when(plain) {
		&:hover,
		&:focus {
			background: $--color-white;
			border-color: $--color-primary;
			color: $--color-primary;
		}

		&:active {
			background: $--color-white;
			border-color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
			color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
			outline: none;
		}
	}

	/* is-disabled */
	@include when(disabled) {
		&,
		&:hover,
		&:focus {
			color: $--button-disabled-font-color;
			background-color: $--button-disabled-background-color;
			border-color: $--button-disabled-border-color;
			cursor: not-allowed;
			background-image: none;
		}

		&.ph-button--text {
			background: transparent;
		}

		&.is-plain {
			&,
			&:hover,
			&:focus {
				background-color: $--color-white;
				border-color: $--button-disabled-border-color;
				color: $--button-disabled-font-color;
			}
		}
	}

	/* is-loading */
	@include when(loading) {
		position: relative;
		pointer-events: none;

		&:before {
			pointer-events: none;
			content: '';
			position: absolute;
			left: -1px;
			top: -1px;
			right: -1px;
			bottom: -1px;
			border-radius: inherit;
			background-color: rgba(255,255,255,.35);
		  }
	}

	/* is-ghost */
	@include when(ghost) {
		color: $--color-white;
		background: transparent !important;
		border-color: $--color-white;
	}

	/* is-round */
	@include when(round) {
		border-radius: 20px;
		padding: 12px 20px;
	}

	/* is-circle */
	@include when(circle) {
		border-radius: 50%;
		padding: $--button-padding-vertical;
	}

	/* ph-buton--primary */
	@include m(primary) {
		@include button-variant(
			$--button-primary-font-color,
			$--button-primary-background-color,
			$--button-primary-border-color
		);
	}

	/* ph-button--success */
	@include m(success) {
		@include button-variant(
			$--button-success-font-color,
			$--button-success-background-color,
			$--button-success-border-color
		);
	}

	/* ph-button--warning */
	@include m(warning) {
		@include button-variant(
			$--button-warning-font-color,
			$--button-warning-background-color,
			$--button-warning-border-color
		);
	}

	/* ph-button--error */
	@include m(error) {
		@include button-variant($--button-error-font-color, $--button-error-background-color, $--button-error-border-color);
	}

	/* ph-button--info */
	@include m(info) {
		@include button-variant($--button-info-font-color, $--button-info-background-color, $--button-info-border-color);
	}

	/* ph-button--text */
	@include m(text) {
		border-color: transparent;
		color: $--color-primary;
		background: transparent;
		padding-left: 0;
		padding-right: 0;

		&:hover,
		&:focus {
			color: mix($--color-white, $--color-primary, $--button-hover-tint-percent);
			border-color: transparent;
			background: transparent;
		}
		&:active {
			color: mix($--color-black, $--color-primary, $--button-active-shade-percent);
			border-color: transparent;
			background: transparent;
		}
	}

	/* ph-button--dashed */
	@include m(dashed) {
		@include button-variant(
			$--button-dashed-font-color,
			$--button-dashed-background-color,
			$--button-dashed-border-color
		);
		&,
		&:hover,
		&:focus,
		&:active {
			border-style: dashed;
		}
	}

	/* ph-button--large */
	@include m(large) {
		@include button-size(
			$--button-large-padding-vertical,
			$--button-large-padding-horizontal,
			$--button-large-font-size,
			$--button-large-border-radius
		);
		@include when(circle) {
			padding: $--button-large-padding-vertical;
		}
	}

	/* ph-button--medium | default */
	@include m(mediun) {
		@include button-size(
			$--button-padding-vertical,
			$--button-padding-horizontal,
			$--button-font-size,
			$--button-border-radius
		);
		@include when(circle) {
			padding: $--button-padding-vertical;
		}
	}

	/* ph-button--small */
	@include m(small) {
		@include button-size(
			$--button-small-padding-vertical,
			$--button-small-padding-horizontal,
			$--button-small-font-size,
			$--button-small-border-radius
		);
		@include when(circle) {
			padding: $--button-small-padding-vertical;
		}
	}
}

/* ph-button--group */
@include b(button-group) {
	@include utils-clearfix;
	display: inline-block;
	vertical-align: middle;

	& > .ph-button {
		float: left;
		position: relative;
		& + .ph-button {
			margin-left: 0;
		}
		&.is-disabled {
			z-index: 1;
		}
		&:first-child {
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
		}
		&:last-child {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}

		&:first-child:last-child {
			border-top-right-radius: $--button-border-radius;
			border-bottom-right-radius: $--button-border-radius;
			border-top-left-radius: $--button-border-radius;
			border-bottom-left-radius: $--button-border-radius;

			&.is-round {
				border-radius: 20px;
			}

			&.is-circle {
				border-radius: 50%;
			}
		}
		&:not(:first-child):not(:last-child) {
			border-radius: 0;
		}
		&:not(:last-child) {
			margin-right: -1px;
		}

		&:hover,
		&:focus,
		&:active {
			z-index: 1;
		}

		@include when(active) {
			z-index: 1;
		}
	}
	& > .ph-dropdown {
		& > .ph-button {
		  border-top-left-radius: 0;
		  border-bottom-left-radius: 0;
		  border-left-color: rgba($--color-white, 0.5);
		}
	  }
	
	  @each $type in (primary, success, warning, error, info,text,dashed) {
		.ph-button--#{$type} {
		  &:first-child {
			border-right-color: rgba($--color-white, 0.5);
		  }
		  &:last-child {
			border-left-color: rgba($--color-white, 0.5);
		  }
		  &:not(:first-child):not(:last-child) {
			border-left-color: rgba($--color-white, 0.5);
			border-right-color: rgba($--color-white, 0.5);
		  }
		}
	  }
}
